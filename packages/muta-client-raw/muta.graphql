query queryService(
  $serviceName: String!
  $method: String!
  $payload: String!
  $height: Uint64
  $caller: Address = "0x0000000000000000000000000000000000000000"
  $cyclePrice: Uint64
  $cycleLimit: Uint64
) {
  queryService(
    height: $height
    serviceName: $serviceName
    method: $method
    payload: $payload
    caller: $caller
    cyclesPrice: $cyclePrice
    cyclesLimit: $cycleLimit
  ) {
    code
    errorMessage
    succeedData
  }
}

mutation sendTransaction(
  $inputRaw: InputRawTransaction!
  $inputEncryption: InputTransactionEncryption!
) {
  sendTransaction(inputRaw: $inputRaw, inputEncryption: $inputEncryption)
}

fragment ServicePayload on SignedTransaction {
  serviceName
  method
  payload
}

query getTransaction($txHash: Hash!) {
  getTransaction(txHash: $txHash) {
    ...ServicePayload
    nonce
    chainId
    cyclesLimit
    cyclesPrice
    timeout
    txHash
    pubkey
    signature
  }
}

query getReceipt($txHash: Hash!) {
  getReceipt(txHash: $txHash) {
    txHash
    height
    cyclesUsed
    events {
      data
      service
    }
    stateRoot
    response {
      serviceName
      method
      response {
        code
        errorMessage
        succeedData
      }
    }
  }
}

query getBlock($height: Uint64) {
  getBlock(height: $height) {
    header {
      chainId
      confirmRoot
      cyclesUsed
      height
      execHeight
      orderRoot
      prevHash

      proposer
      receiptRoot
      stateRoot
      timestamp
      validatorVersion
      proof {
        bitmap
        blockHash
        height
        round
        signature
      }
      validators {
        address
        proposeWeight
        voteWeight
      }
    }
    orderedTxHashes
    hash
  }
}
